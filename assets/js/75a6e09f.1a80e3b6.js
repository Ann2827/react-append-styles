"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[811],{1676:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=n(5893),o=n(1151);const a={sidebar_position:1},r="Classes",c={id:"doc/usage/classes",title:"Classes",description:"Static styles",source:"@site/docs/doc/usage/classes.mdx",sourceDirName:"doc/usage",slug:"/doc/usage/classes",permalink:"/docs/doc/usage/classes",draft:!1,unlisted:!1,editUrl:"https://github.com/Ann2827/react-append-styles/tree/main/docs/doc/usage/classes.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebarDoc",previous:{title:"Usage",permalink:"/docs/category/usage"},next:{title:"Creating themes",permalink:"/docs/doc/usage/theming"}},i={},d=[{value:"Static styles",id:"static-styles",level:2},{value:"Dynamic props",id:"dynamic-props",level:2},{value:"Mounting by condition",id:"mounting-by-condition",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"classes",children:"Classes"}),"\n",(0,t.jsx)(s.h2,{id:"static-styles",children:"Static styles"}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",metastring:"jsx",children:"import React from 'react';\nimport { makeClasses } from 'react-append-styles';\n\nconst useClasses = makeClasses<'wrapper'>({ wrapper: { backgroundColor: 'red' } });\n\nconst MyComponent: React.FC = () => {\n  const { wrapper } = useClasses(null);\n\n  return (<div className={wrapper}>MyComponent</div>);\n};\n"})}),"\n",(0,t.jsx)(s.h2,{id:"dynamic-props",children:"Dynamic props"}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",metastring:"jsx",children:"import React from 'react';\nimport { makeClasses } from 'react-append-styles';\n\nconst useClasses = makeClasses<'wrapper', { color: string }>((props) => ({\n  wrapper: { backgroundColor: props.color },\n}));\n\nconst MyComponent: React.FC = () => {\n  const { wrapper } = useClasses({ color: 'green' });\n\n  return (<div className={wrapper}>MyComponent</div>);\n};\n"})}),"\n",(0,t.jsx)(s.h2,{id:"mounting-by-condition",children:"Mounting by condition"}),"\n",(0,t.jsx)(s.p,{children:'If the component accepts the "need" or "do not need" parameter to add additional styles, then adding styles to the head can be prevented.'}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["See the principle of operation of the second argument ",(0,t.jsx)(s.code,{children:"useClasses"})," here ",(0,t.jsx)(s.a,{href:"../../api/classes#useclasses",children:"API"})]})})]})}function p(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>r});var t=n(7294);const o={},a=t.createContext(o);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);